{"version":3,"sources":["components/Questioners/QuestionerPage.module.css","components/AnswerLists/AnswerListPage.module.css","assets/loading.svg","react-auth0-spa.jsx","utils/verifyScope.js","components/PrivateRoute.jsx","components/Loading.jsx","components/NavBar.jsx","components/Footer.jsx","utils/history.js","utils/initFontAwesome.js","utils/doFetch.js","config.js","components/Questioners/QuestionerCard.jsx","components/Questioners/QuestionerCardDeck.jsx","components/ProtectedElement.jsx","components/Questioners/Questioners.jsx","components/Questioners/QuestionerForm.jsx","components/Questioners/QuestionerSubmit.jsx","components/Questioners/QuestionerContainer.jsx","components/Questioners/QuestionerPage.jsx","components/AnswerLists/AnswerListCard.jsx","components/AnswerLists/AnswerListCardDeck.jsx","components/AnswerLists/AnswerLists.jsx","components/AnswerLists/AnswerList.jsx","components/AnswerLists/AnswerListPage.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","title","desc","question_content","question_answer","buttons","right","form_grid","quesion_input","__webpack_require__","p","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","verifyScope","scope","requiredScope","reduce","acc","curr","some","scopeItem","PrivateRoute","_ref","Component","component","path","_ref$requiredScope","rest","Object","objectWithoutProperties","_useAuth","isAuthenticated","loginWithRedirect","useEffect","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","appState","targetUrl","stop","apply","this","arguments","fn","react_default","createElement","react_router","to","assign","render","props","Loading","className","src","loading","alt","NavBar","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","user","logout","logoutWithRedirect","returnTo","origin","Navbar","color","light","expand","Container","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","tag","RouterNavLink","exact","activeClassName","Button","id","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","picture","width","DropdownMenu","DropdownItem","header","name","index_es","icon","block","style","minHeight","react_router_dom","Footer","href","target","rel","createBrowserHistory","initFontAwesome","library","add","faLink","faUser","faPowerOff","doFetch","token","method","route","body","res","data","_args","length","undefined","fetch","concat","process","headers","Authorization","t0","sent","Content-Type","JSON","stringify","json","abrupt","_x","QuestionerCard","description","Card","CardBody","CardTitle","CardText","QuestionerCardGroup","questioners","CardDeck","map","_id","Questioners_QuestionerCard","key","ProtectedElement","children","callback","Questioners","getTokenSilently","IsLoading","setIsLoading","_useState3","_useState4","setQuestioners","_useState5","_useState6","isError","setIsError","console","log","react","components_ProtectedElement","classes","type","faPlus","QuestionerCardDeck","withRouter","mode","match","setTitle","setDescription","questions","setQuestions","_useState7","_useState8","isLoading","_data$questioner","questionerTitle","questionerDescription","questionQuestions","params","success","questioner","push","uuid","content","onSubmit","_ref3","_callee2","e","questionsToSend","_context2","preventDefault","_ref4","value","alert","updatedQuestioner","t1","removeQuestioner","_ref5","_callee3","_context3","confirm","Fragment","faArrowLeft","faTrashAlt","Input","onChange","_ref6","defaultValue","placeholder","filter","question","toConsumableArray","form","faSave","_ref$questions","questionerId","answers","setAnswers","onTextAreaChange","answer","_objectSpread","trim","submitAnswers","responderEmail","email","answerList","FormGroup","Label","htmlFor","required","every","err","QuestionerContainer","CardSubtitle","setQuestioner","faPencilAlt","Questioners_QuestionerContainer","Questioners_QuestionerSubmit","AnswerListCard","AnswerListCardGroup","answerLists","AnswerLists_AnswerListCard","AnswerLists","AnswerListCardDeck","contentToRender","index","questionContent","answerContent","disabled","setAnswerList","_token","deleteAnswerList","finish","AnswerLists_AnswerList","App","components_Loading","components_NavBar","components_PrivateRoute","Questioners_QuestionerForm","QuestionerPage","AnswerListPage","components_Footer","Boolean","hostname","ReactDOM","_ref$onRedirectCallba","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","_useState9","_useState10","popupOpen","setPopupOpen","_useState11","_useState12","setScope","_useState13","_useState14","setToken","auth0FromHook","_user","accessToken","decoded","createAuth0Client","search","includes","handleRedirectCallback","getUser","jwtDecode","split","initAuth0","loginWithPopup","_args2","error","Provider","getIdTokenClaims","getTokenWithPopup","domain","client_id","audience","redirect_uri","src_App","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a9b2c26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"QuestionerPage_title__m94Rm\",\"desc\":\"QuestionerPage_desc__jGZ-T\",\"question_content\":\"QuestionerPage_question_content__32X03\",\"question_answer\":\"QuestionerPage_question_answer__Fbb3U\",\"buttons\":\"QuestionerPage_buttons__3RjMd\",\"right\":\"QuestionerPage_right__3MSow\",\"form_grid\":\"QuestionerPage_form_grid__3gOmc\",\"quesion_input\":\"QuestionerPage_quesion_input__-U-nI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AnswerListPage_title__3E92v\",\"desc\":\"AnswerListPage_desc__jvc4g\",\"question_content\":\"AnswerListPage_question_content__ykFLU\",\"question_answer\":\"AnswerListPage_question_answer__15q3O\",\"buttons\":\"AnswerListPage_buttons__1w65u\",\"right\":\"AnswerListPage_right__3dJJO\"};","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","import React, { useState, useEffect, useContext } from 'react'\nimport createAuth0Client from '@auth0/auth0-spa-js'\nimport jwtDecode from 'jwt-decode'\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname)\n\nexport const Auth0Context = React.createContext()\nexport const useAuth0 = () => useContext(Auth0Context)\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState()\n  const [user, setUser] = useState()\n  const [auth0Client, setAuth0] = useState()\n  const [loading, setLoading] = useState(true)\n  const [popupOpen, setPopupOpen] = useState(false)\n  const [scope, setScope] = useState([])\n  const [token, setToken] = useState(null)\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions)\n      setAuth0(auth0FromHook)\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback()\n        onRedirectCallback(appState)\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated()\n\n      setIsAuthenticated(isAuthenticated)\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser()\n        const accessToken = await auth0FromHook.getTokenSilently()\n\n        setUser(user)\n        setToken(accessToken)\n\n        const decoded = await jwtDecode(accessToken)\n\n        setScope(decoded.scope.split(' '))\n      }\n\n      setLoading(false)\n    }\n    initAuth0()\n  }, [])\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true)\n    try {\n      await auth0Client.loginWithPopup(params)\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setPopupOpen(false)\n    }\n\n    const user = await auth0Client.getUser()\n\n    setUser(user)\n    setIsAuthenticated(true)\n  }\n\n  const handleRedirectCallback = async () => {\n    setLoading(true)\n\n    await auth0Client.handleRedirectCallback()\n\n    const user = await auth0Client.getUser()\n\n    setLoading(false)\n    setIsAuthenticated(true)\n    setUser(user)\n  }\n\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        scope,\n        token,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  )\n}\n","export default (scope, requiredScope) => requiredScope.reduce((acc, curr) =>\n  scope.some(scopeItem => scopeItem === curr) ? acc : false, true)\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth0 } from '../react-auth0-spa'\nimport verifyScope from '../utils/verifyScope'\n\nconst PrivateRoute = ({ component: Component, path, requiredScope = [], history, ...rest }) => {\n  const { isAuthenticated, loginWithRedirect, scope } = useAuth0()\n\n  useEffect(() => {\n    const fn = async () => {\n      if (!isAuthenticated) {\n        await loginWithRedirect({\n          appState: { targetUrl: path }\n        })\n      }\n    }\n    fn()\n  }, [isAuthenticated, loginWithRedirect, path])\n\n  if (!verifyScope(scope, requiredScope)) {\n    return <Redirect to='/' />\n  }\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null\n\n  return <Route path={path} render={render} {...rest} />\n}\n\nPrivateRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n  path: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]).isRequired\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport loading from '../assets/loading.svg'\n\nconst Loading = () => (\n  <div className='spinner'>\n    <img src={loading} alt='Loading' />\n  </div>\n)\n\nexport default Loading\n","import React, { useState } from 'react'\nimport { NavLink as RouterNavLink } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\n\nimport { useAuth0 } from '../../src/react-auth0-spa'\n\nconst NavBar = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0()\n\n  const toggle = () => setIsOpen(!isOpen)\n\n  const logoutWithRedirect = () =>\n    logout({\n      returnTo: window.location.origin\n    })\n\n  return (\n    <div className='nav-container'>\n      <Navbar color='light' light expand='md'>\n        <Container>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className='mr-auto' navbar>\n              <NavItem>\n                <NavLink\n                  tag={RouterNavLink}\n                  to='/questioners'\n                  exact\n                  activeClassName='router-link-exact-active'\n                >\n                  Questioners\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RouterNavLink}\n                  to='/answerlists'\n                  exact\n                  activeClassName='router-link-exact-active'\n                >\n                  Answers\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <Nav className='d-none d-md-block' navbar>\n              {!isAuthenticated && (\n                <NavItem>\n                  <Button\n                    id='qsLoginBtn'\n                    color='primary'\n                    className='btn-margin'\n                    onClick={() => loginWithRedirect({})}\n                  >\n                    Log in\n                  </Button>\n                </NavItem>\n              )}\n              {isAuthenticated && (\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret id='profileDropDown'>\n                    <img\n                      src={user.picture}\n                      alt='Profile'\n                      className='nav-user-profile rounded-circle'\n                      width='50'\n                    />\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>{user.name}</DropdownItem>\n                    <DropdownItem\n                      id='qsLogoutBtn'\n                      onClick={() => logoutWithRedirect()}\n                    >\n                      <FontAwesomeIcon icon='power-off' className='mr-3' /> Log\n                      out\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              )}\n            </Nav>\n            {!isAuthenticated && (\n              <Nav className='d-md-none' navbar>\n                <NavItem>\n                  <Button\n                    id='qsLoginBtn'\n                    color='primary'\n                    block\n                    onClick={() => loginWithRedirect({})}\n                  >\n                    Log in\n                  </Button>\n                </NavItem>\n              </Nav>\n            )}\n            {isAuthenticated && (\n              <Nav\n                className='d-md-none justify-content-between'\n                navbar\n                style={{ minHeight: 170 }}\n              >\n                <NavItem>\n                  <span className='user-info'>\n                    <img\n                      src={user.picture}\n                      alt='Profile'\n                      className='nav-user-profile d-inline-block rounded-circle mr-3'\n                      width='50'\n                    />\n                    <h6 className='d-inline-block'>{user.name}</h6>\n                  </span>\n                </NavItem>\n                <NavItem>\n                  <FontAwesomeIcon icon='user' className='mr-3' />\n                  <RouterNavLink\n                    to='/profile'\n                    activeClassName='router-link-exact-active'\n                  >\n                    Profile\n                  </RouterNavLink>\n                </NavItem>\n                <NavItem>\n                  <FontAwesomeIcon icon='power-off' className='mr-3' />\n                  <RouterNavLink\n                    to='#'\n                    id='qsLogoutBtn'\n                    onClick={() => logoutWithRedirect()}\n                  >\n                    Log out\n                  </RouterNavLink>\n                </NavItem>\n              </Nav>\n            )}\n          </Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\n\nconst Footer = () => (\n  <footer className='bg-light p-3 text-center'>\n    <div className='logo' />\n    <p>\n      By <a href='https://github.com/semreg' target='_blank' rel='noopener noreferrer'>Semreg</a> with <a href='https://auth0.com'>Auth0</a>\n    </p>\n  </footer>\n)\n\nexport default Footer\n","import { createBrowserHistory } from 'history'\nexport default createBrowserHistory()\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faLink, faPowerOff, faUser } from '@fortawesome/free-solid-svg-icons'\n\nfunction initFontAwesome () {\n  library.add(faLink)\n  library.add(faUser)\n  library.add(faPowerOff)\n}\n\nexport default initFontAwesome\n","import { backendUrl } from '../config'\n\nconst doFetch = async (token, method = 'GET', route, body = {}) => {\n  const res = method === 'GET' || method === 'DELETE'\n    ? (\n      await fetch(`${backendUrl}/api/${route}`, {\n        method,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }))\n    : (\n      await fetch(`${backendUrl}/api/${route}`, {\n        method,\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }))\n\n  const data = await res.json()\n\n  return data\n}\n\nexport default doFetch\n","export const domain = process.env.REACT_APP_DOMAIN || ''\nexport const clientId = process.env.REACT_APP_CLIENT_ID || ''\nexport const audience = process.env.REACT_APP_AUDIENCE || ''\nexport const backendUrl = process.env.REACT_APP_BACKEND_URL || ''\n","import React from 'react'\nimport {\n  Card, Button, CardTitle, CardText, CardBody\n} from 'reactstrap'\nimport { Link } from 'react-router-dom'\n\nconst QuestionerCard = ({ id, title, description }) => (\n  <Card>\n    <CardBody>\n      <CardTitle>{title}</CardTitle>\n      <CardText>{description}</CardText>\n      <Link to={`/questioners/${id}`}>\n        <Button>Respond</Button>\n      </Link>\n    </CardBody>\n  </Card>\n)\n\nexport default QuestionerCard\n","import React from 'react'\n\nimport { CardDeck } from 'reactstrap'\nimport QuestionerCard from './QuestionerCard'\n\nconst QuestionerCardGroup = ({ questioners }) => (\n  <CardDeck>\n    {questioners.map(({ _id, title, description }) => (\n      <QuestionerCard\n        key={_id}\n        id={_id}\n        title={title}\n        description={description}\n      />\n    ))}\n  </CardDeck>\n)\n\nexport default QuestionerCardGroup\n","import React from 'react'\nimport verifyScope from '../utils/verifyScope'\n\nconst ProtectedElement = ({ scope, requiredScope, callback, children }) =>\n  verifyScope(scope, requiredScope) ? children : null\n\nexport default ProtectedElement\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { useAuth0 } from '../../react-auth0-spa'\nimport doFetch from '../../utils/doFetch'\nimport QuestionerCardDeck from './QuestionerCardDeck'\nimport classes from './QuestionerPage.module.css'\nimport { Button } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport ProtectedElement from '../ProtectedElement'\n\nconst Questioners = () => {\n  const { getTokenSilently, scope } = useAuth0()\n  const [IsLoading, setIsLoading] = useState(true)\n  const [questioners, setQuestioners] = useState([])\n  const [isError, setIsError] = useState(false)\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getTokenSilently()\n\n        const data = await doFetch(token, 'GET', 'questioners')\n\n        setQuestioners(data.questioners)\n        setIsLoading(false)\n      } catch (err) {\n        console.log(err)\n        setIsError(true)\n      }\n    })()\n  }, [])\n\n  if (IsLoading) {\n    return 'Loading...'\n  }\n\n  if (isError) {\n    return 'Error'\n  }\n\n  return (\n    <Fragment>\n      <ProtectedElement\n        scope={scope}\n        requiredScope={['update:questioners']}\n      >\n        <div className={classes.buttons}>\n          <Link to='questioners/create'>\n            <Button\n              type='submit'\n              className='btn-primary'\n            >\n              <FontAwesomeIcon\n                icon={faPlus}\n                className='mr-3'\n              />\n                New\n            </Button>\n          </Link>\n        </div>\n      </ProtectedElement>\n      <QuestionerCardDeck questioners={questioners} />\n    </Fragment>\n  )\n}\n\nexport default Questioners\n","import React, { useState, useEffect } from 'react'\nimport {\n  Card, Button, CardBody, Container, Input\n} from 'reactstrap'\nimport { Link, withRouter } from 'react-router-dom'\nimport { useAuth0 } from '../..//react-auth0-spa'\nimport doFetch from '../..//utils/doFetch'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport classes from './QuestionerPage.module.css'\nimport { faArrowLeft, faTrashAlt, faPlus, faSave } from '@fortawesome/free-solid-svg-icons'\nimport uuid from 'uuid/v1'\n\nconst QuestionerForm = ({ mode, match, history }) => {\n  const { token } = useAuth0()\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [questions, setQuestions] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    // Fetch questioner if in editing mode\n    if (mode === 'EDIT') {\n      (async () => {\n        const data = await doFetch(token, 'GET', `questioners/${match.params.id}`)\n\n        if (!data.success) {\n          history.push('/questioners')\n        } else {\n          const {\n            title: questionerTitle,\n            description: questionerDescription,\n            questions: questionQuestions\n          } = data.questioner\n\n          setIsLoading(false)\n          setTitle(questionerTitle)\n          setDescription(questionerDescription)\n          setQuestions(questionQuestions)\n        }\n      })()\n    } else {\n      // If in creating mode, add one empty question\n      setIsLoading(false)\n      setQuestions([{ _id: uuid(), content: '' }])\n    }\n  }, [])\n\n  const onSubmit = async e => {\n    e.preventDefault()\n\n    const questionsToSend = questions.map(({ _id }) => ({ content: e.target[_id].value }))\n\n    try {\n      // If in editing mode: `questioners/update/<id>`\n      // In creating mode: `questioners/new`\n      const res = await doFetch(\n        token,\n        `${mode === 'EDIT' ? 'PUT' : 'POST'}`,\n        `questioners/${mode === 'EDIT' ? `update/${match.params.id}` : 'new'}`,\n        {\n          title,\n          description,\n          questions: questionsToSend\n        }\n      )\n\n      if (!res.success) {\n        alert(`Failed to ${mode === 'UPDATE' ? 'update' : 'create'} questioner`)\n        history.push('/questioners')\n      }\n\n      switch (mode) {\n        case 'EDIT':\n          history.push(`/questioners/${res.updatedQuestioner._id}`)\n          break\n        case 'CREATE':\n          history.push(`/questioners/${res.questioner._id}`)\n          break\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const removeQuestioner = async () => {\n    if (window.confirm('Are you sure?')) {\n      try {\n        await doFetch(\n          token,\n          'DELETE',\n          `questioners/delete/${match.params.id}`\n        )\n\n        history.push('/questioners')\n      } catch (err) {\n        console.log(err)\n        alert('Unable to delete')\n      }\n    }\n  }\n\n  const addQuestion = () => setQuestions([...questions, { _id: uuid(), content: '' }])\n\n  const removeQuestion = id => setQuestions(questions.filter(question => question._id !== id))\n\n  if (isLoading) {\n    return 'Loading...'\n  }\n\n  return (\n    <>\n      <div className={classes.buttons}>\n        <Link to={`/questioners/${mode === 'EDIT' ? match.params.id : ''}`}>\n          <Button type='submit'>\n            <FontAwesomeIcon icon={faArrowLeft} /> Back\n          </Button>\n        </Link>\n        {mode === 'EDIT'\n          ? (\n            <div className={classes.right}>\n              <Link to={`/questioners/${match.params.id}/edit`}>\n                <Button\n                  type='submit'\n                  className='btn-danger'\n                  onClick={removeQuestioner}\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} /> Remove\n                </Button>\n              </Link>\n            </div>\n          ) : null\n        }\n      </div>\n      <Card className='mt-4 mb-3'>\n        <CardBody>\n          Title\n          <Input\n            className='mb-2'\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n          Description\n          <Input\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n          />\n          <hr/>\n          <Container>\n            <form\n              className={classes.form_grid}\n              onSubmit={onSubmit}\n              id='questionsForm'\n            >\n              {questions ? questions.map(({ _id, content }) => (\n                <div\n                  className={classes.quesion_input}\n                  key={_id}\n                >\n                  <input\n                    id={_id}\n                    type='text'\n                    className='form-control'\n                    defaultValue={content}\n                    placeholder='Enter your question...'\n                  />\n                  <Button\n                    className='btn-danger'\n                    onClick={() => removeQuestion(_id)}\n                  >\n                    <FontAwesomeIcon icon={faTrashAlt}/>\n                  </Button>\n                </div>\n              )) : null}\n              <Button\n                className='btn-primary'\n                onClick={addQuestion}\n              >\n                <FontAwesomeIcon icon={faPlus}/>\n              </Button>\n            </form>\n          </Container>\n        </CardBody>\n      </Card>\n      <div className={classes.buttons}>\n        <div>\n          <Button\n            type='submit'\n            className='mt-1 btn-success'\n            form='questionsForm'\n          >\n            <FontAwesomeIcon icon={faSave} /> Save\n          </Button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default withRouter(QuestionerForm)\n","import React, { useState, Fragment } from 'react'\nimport {\n  Input,\n  Label,\n  FormGroup,\n  Button\n} from 'reactstrap'\nimport { useAuth0 } from '../../react-auth0-spa'\nimport doFetch from '../../utils/doFetch'\nimport { withRouter } from 'react-router-dom'\n\nconst QuestionerSubmit = ({ questions = [], questionerId, history }) => {\n  const { user, getTokenSilently } = useAuth0()\n  const [answers, setAnswers] = useState(questions.map(({ _id }) => ({ _id, content: '' })))\n\n  const onTextAreaChange = e => {\n    setAnswers(answers.map(answer => answer._id === e.target.id\n      ? { ...answer, content: e.target.value.trim() }\n      : answer\n    ))\n  }\n\n  const submitAnswers = async () => {\n    const token = await getTokenSilently()\n\n    const data = await doFetch(token, 'POST', 'answerLists/new', {\n      questionerId,\n      answers,\n      responderEmail: user.email\n    })\n\n    if (data.success) {\n      history.push(`/answerlists/${data.answerList._id}`)\n      window.alert('Thank you for responding!')\n    } else {\n      window.alert('Failed sending answers.')\n    }\n  }\n\n  const onBtnClick = () => {\n    const areFilled = answers.every(answer => answer.content)\n\n    if (areFilled) {\n      try {\n        submitAnswers()\n      } catch (err) {\n        console.log(err)\n        window.alert('Failed sending answers.')\n      }\n    } else {\n      window.alert('Please, answer all the questions!')\n    }\n  }\n\n  return (\n    <FormGroup>\n      {questions.map(({ _id, content }) => (\n        <Fragment key={_id}>\n          <Label\n            className='mt-3 mb-3'\n            htmlFor={_id}\n          >\n            {content}\n          </Label>\n          <Input\n            type='textarea'\n            name='text'\n            id={_id}\n            onChange={onTextAreaChange}\n            required\n          />\n        </Fragment>\n      ))}\n      <Button\n        type='submit'\n        className='btn-lg btn-dark mt-3'\n        onClick={onBtnClick}\n      >\n        Submit answer\n      </Button>\n    </FormGroup>\n  )\n}\n\nexport default withRouter(QuestionerSubmit)\n","import React from 'react'\nimport {\n  Card, Container, CardTitle, CardSubtitle, CardBody\n} from 'reactstrap'\nimport classes from './QuestionerPage.module.css'\n\nconst QuestionerContainer = ({ title, description, children }) => (\n  <Card className='mt-4 mb-5'>\n    <CardBody>\n      <CardTitle className={classes.title}>\n        {title}\n      </CardTitle>\n      <CardSubtitle className={classes.desc}>\n        {description}\n      </CardSubtitle>\n      <hr/>\n      <Container>\n        {children}\n      </Container>\n    </CardBody>\n  </Card>\n)\n\nexport default QuestionerContainer\n","import React, { useState, useEffect } from 'react'\nimport { useAuth0 } from '../../react-auth0-spa'\nimport doFetch from '../../utils/doFetch'\nimport { Button } from 'reactstrap'\nimport classes from './QuestionerPage.module.css'\nimport QuestionerSubmit from './QuestionerSubmit'\nimport { Link, withRouter } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faPencilAlt } from '@fortawesome/free-solid-svg-icons'\nimport QuestionerContainer from './QuestionerContainer'\nimport ProtectedElement from '../ProtectedElement'\n\nconst QuestionerPage = ({ match, history }) => {\n  const [questioner, setQuestioner] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [isError, setIsError] = useState(false)\n  const { token, scope } = useAuth0()\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await doFetch(token, 'GET', `questioners/${match.params.id}`)\n\n        if (!data.success) {\n          history.push('/questioners')\n        }\n\n        setQuestioner(data.questioner)\n        setIsLoading(false)\n      } catch (err) {\n        console.log(err)\n        setIsError(true)\n      }\n    })()\n  }, [])\n\n  if (isLoading) {\n    return 'Loading'\n  }\n\n  if (isError) {\n    return 'Error'\n  }\n\n  const { _id, title, description, questions } = questioner\n\n  return (\n    <>\n      <div className={classes.buttons}>\n        <Link to='/questioners'>\n          <Button\n            type='submit'\n          >\n            <FontAwesomeIcon icon={faArrowLeft} /> Back\n          </Button>\n        </Link>\n        <div className={classes.right}>\n          <ProtectedElement\n            scope={scope}\n            requiredScope={['update:questioners']}\n          >\n            <Link to={`/questioners/${match.params.id}/edit`}>\n              <Button\n                type='submit'\n                className='btn-primary'\n              >\n                <FontAwesomeIcon icon={faPencilAlt} /> Edit\n              </Button>\n            </Link>\n          </ProtectedElement>\n        </div>\n      </div>\n      <QuestionerContainer\n        title={title}\n        description={description}\n      >\n        <QuestionerSubmit\n          questionerId={_id}\n          questions={questions}\n        />\n      </QuestionerContainer>\n    </>\n  )\n}\n\nexport default withRouter(QuestionerPage)\n","import React from 'react'\nimport {\n  Card, Button, CardTitle, CardText, CardBody\n} from 'reactstrap'\nimport { Link } from 'react-router-dom'\n\nconst AnswerListCard = ({ id, questionerTitle, responderEmail }) => (\n  <Card>\n    <CardBody>\n      <CardTitle><b>Questioner: </b>{questionerTitle}</CardTitle>\n      <CardText><b>Responder&apos;s email: </b>{responderEmail}</CardText>\n      <Link to={`/answerlists/${id}`}>\n        <Button>View</Button>\n      </Link>\n    </CardBody>\n  </Card>\n)\n\nexport default AnswerListCard\n","import React from 'react'\nimport { CardDeck } from 'reactstrap'\nimport AnswerListCard from './AnswerListCard'\n\nconst AnswerListCardGroup = ({ answerLists }) => (\n  <CardDeck>\n    {answerLists.map(({ _id, responderEmail, questioner }) => (\n      <AnswerListCard\n        key={_id}\n        id={_id}\n        questionerTitle={questioner.title}\n        responderEmail={responderEmail}\n      />\n    ))}\n  </CardDeck>\n)\n\nexport default AnswerListCardGroup\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { useAuth0 } from '../../react-auth0-spa'\nimport doFetch from '../../utils/doFetch'\nimport AnswerListCardDeck from './AnswerListCardDeck'\n\nconst AnswerLists = () => {\n  const { getTokenSilently } = useAuth0()\n  const [IsLoading, setIsLoading] = useState(true)\n  const [answerLists, setQuestioners] = useState([])\n  const [isError, setIsError] = useState(false)\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getTokenSilently()\n\n        const data = await doFetch(token, 'GET', 'answerlists')\n\n        setQuestioners(data.answerLists)\n        setIsLoading(false)\n      } catch (err) {\n        setIsError(true)\n      }\n    })()\n  }, [])\n\n  if (IsLoading) {\n    return 'Loading...'\n  }\n\n  if (isError) {\n    return 'Error'\n  }\n\n  return (\n    <Fragment>\n      <AnswerListCardDeck answerLists={answerLists} />\n    </Fragment>\n  )\n}\n\nexport default AnswerLists\n","import React, { Fragment } from 'react'\nimport {\n  Input,\n  Label,\n  FormGroup\n} from 'reactstrap'\nimport { withRouter } from 'react-router-dom'\n\nconst AnswerList = ({ answers, questioner }) => {\n  const contentToRender = answers.map(({ _id: id, content }, index) => ({\n    id,\n    questionContent: questioner.questions[index].content,\n    answerContent: content\n  }))\n\n  return (\n    <FormGroup>\n      {contentToRender.map(({ id, questionContent, answerContent }) => (\n        <Fragment key={id}>\n          <Label\n            className='mt-3 mb-3'\n            htmlFor={id}\n          >\n            {questionContent}\n          </Label>\n          <Input\n            type='textarea'\n            name='text'\n            id={id}\n            disabled\n            value={answerContent}\n          />\n        </Fragment>\n      ))}\n    </FormGroup>\n  )\n}\n\nexport default withRouter(AnswerList)\n","import React, { useState, useEffect } from 'react'\nimport { useAuth0 } from '../../react-auth0-spa'\nimport doFetch from '../../utils/doFetch'\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Container,\n  Button\n} from 'reactstrap'\nimport classes from './AnswerListPage.module.css'\nimport AnswerList from './AnswerList'\nimport { Link, withRouter } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport ProtectedElement from '../ProtectedElement'\n\nconst AnswerListPage = ({ match, history }) => {\n  const [answerList, setAnswerList] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [isError, setIsError] = useState(false)\n  const { getTokenSilently, scope, token } = useAuth0()\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getTokenSilently()\n\n        const data = await doFetch(token, 'GET', `answerlists/${match.params.id}`)\n\n        if (!data.success) {\n          history.push('/questioners')\n        }\n\n        setAnswerList(data.answerList)\n        setIsLoading(false)\n      } catch (err) {\n        console.log(err)\n        setIsError(true)\n      }\n    })()\n  }, [])\n\n  const deleteAnswerList = async () => {\n    try {\n      if (window.confirm('Are you sure?')) {\n        await doFetch(token, 'DELETE', `answerlists/delete/${match.params.id}`)\n        history.push('/answerlists')\n      }\n    } finally {\n\n    }\n  }\n\n  if (isLoading) {\n    return 'Loading...'\n  }\n\n  if (isError) {\n    return 'Error'\n  }\n\n  const { questioner, answers, responderEmail } = answerList\n\n  return (\n    <>\n      <div className={classes.buttons}>\n        <Link to='/answerlists'>\n          <Button\n            type='submit'\n          >\n            <FontAwesomeIcon icon={faArrowLeft}/> Back\n          </Button>\n        </Link>\n        <ProtectedElement\n          scope={scope}\n          requiredScope={['delete:answerLists']}\n        >\n          <div className={classes.right}>\n            <Button\n              type='submit'\n              className='btn-danger'\n              onClick={deleteAnswerList}\n            >\n              <FontAwesomeIcon icon={faTrashAlt} /> Remove\n            </Button>\n\n          </div>\n        </ProtectedElement>\n      </div>\n      <Card className='mb-5'>\n        <CardBody>\n          <CardTitle className={classes.title}>\n            {questioner.title}\n          </CardTitle>\n          <CardSubtitle className={classes.desc}>\n            {questioner.description}\n          </CardSubtitle>\n          <br/>\n          <CardSubtitle>\n            <b>Responder&apos;s email: </b>{responderEmail}\n          </CardSubtitle>\n          <hr/>\n          <Container>\n            <AnswerList\n              questioner={questioner}\n              answers={answers}\n            />\n          </Container>\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default withRouter(AnswerListPage)\n","import React from 'react'\nimport { Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { Container } from 'reactstrap'\nimport PrivateRoute from './components/PrivateRoute'\nimport Loading from './components/Loading'\nimport NavBar from './components/NavBar'\nimport Footer from './components/Footer'\nimport { useAuth0 } from './react-auth0-spa'\nimport history from './utils/history'\n\n// fontawesome\nimport initFontAwesome from './utils/initFontAwesome'\n\nimport Questioners from './components/Questioners/Questioners'\nimport QuestionerForm from './components/Questioners/QuestionerForm'\nimport QuestionerPage from './components/Questioners/QuestionerPage'\nimport AnswerLists from './components/AnswerLists/AnswerLists'\nimport AnswerListPage from './components/AnswerLists/AnswerListPage'\n\ninitFontAwesome()\n\nconst App = () => {\n  const { loading } = useAuth0()\n\n  if (loading) {\n    return <Loading />\n  }\n\n  return (\n    <Router history={history}>\n      <div id='app' className='d-flex flex-column h-100'>\n        <NavBar />\n        <Container className='flex-grow-1 mt-5'>\n          <Switch>\n            <Route\n              path='/'\n              exact\n              render={() => <Redirect to='/questioners'/>}\n            />\n            <PrivateRoute\n              exact\n              path='/questioners'\n              component={Questioners}\n            />\n            <PrivateRoute\n              exact\n              path='/questioners/create'\n              render={() => <QuestionerForm mode='CREATE'/>}\n              requiredScope={['create:questioners']}\n            />\n            <PrivateRoute\n              exact\n              path='/questioners/:id'\n              component={QuestionerPage}\n            />\n            <PrivateRoute\n              exact\n              path='/questioners/:id/edit'\n              render={() => <QuestionerForm mode='EDIT'/>}\n              requiredScope={['update:questioners']}\n            />\n            <PrivateRoute\n              exact\n              path='/answerlists'\n              component={AnswerLists}\n            />\n            <PrivateRoute\n              exact\n              path='/answerlists/:id'\n              component={AnswerListPage}\n            />\n          </Switch>\n        </Container>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Auth0Provider } from './react-auth0-spa'\nimport history from './utils/history'\nimport * as config from './config'\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  )\n}\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    audience={config.audience}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.querySelector('#root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}